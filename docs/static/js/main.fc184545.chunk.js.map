{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","query","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAU,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OAC1CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DACJ,mCACTC,EAAQC,UAAWH,GACX,GACRI,EAJa,iDAIoCF,EAJpC,kBAGL,GAHK,oBACJ,oCADI,SAKAG,MAAOD,GALP,cAKbE,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAXtB,kBAcZK,GAdY,4CAAH,sDCkBLO,EAfK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAE1B,OACI,sBAAKa,UAAU,uDAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCoCFO,EAtCC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECHN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAErB,IAEEsB,EDV0BK,CAAc3B,GAAlCc,EAJiB,EAItBN,KAAaa,EAJS,EAITA,QASrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDjB,IAElDqB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEUvBgB,EAlCM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAGb3C,mBAAU2C,GAHG,mBAG1CC,EAH0C,KAG9B7C,EAH8B,KASjD,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,8BAEM6C,EAAWpB,KAAK,SAAAV,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCnB9B+B,IAASC,OACP,cAAC,EAAD,CAAcH,kBAAoB,CAAC,mBACnCI,SAASC,eAAe,W","file":"static/js/main.fc184545.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( (cats) => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit hecho')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const apiKey = 'ipqbq4Bjl5e4AlbiEwQejMbFLixzdGKg';\r\n    const query = encodeURI( category );\r\n    const limit = 10;\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ query }&limit=${ limit }&api_key=${ apiKey }`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\nimport PropTypes from 'prop-types'\r\n \r\nconst GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     // Éste código se ejecuta una única vez\r\n    //     getGifs( category )\r\n    //         .then( setImages )\r\n    //         .catch( console.error )     \r\n    // }, [ category ]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">    \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                            key={ img.id } \r\n                            { ...img } \r\n                        />\r\n                        // return <li key={ img.id }>{ img.title }</li>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => { \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid'; \r\n\r\nconst GifExpertApp = ({ defaultCategories = [] }) => {\r\n\r\n    // const categories = ['One Punch', 'Samurai Jack', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState( defaultCategories );\r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Yakusoku no Neverland']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={ setCategories }/>\r\n          <hr /> \r\n          {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n          <div>\r\n              {\r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                    />\r\n                    // <li key={ category }>{ category }</li>\r\n                ))\r\n              }\r\n          </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp defaultCategories={ ['One Punch Man'] }/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}